{"version":3,"file":"static/js/82.a6f81f7d.chunk.js","mappings":"sSAEaA,GAAmBC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,kIAOhBC,GAAkBD,EAAAA,EAAAA,IAAO,MAAPA,CAAH,2CAGfE,GAAoBF,EAAAA,EAAAA,IAAO,MAAPA,CAAH,mHAMjBG,GAAoBH,EAAAA,EAAAA,IAAO,KAAPA,CAAH,mEAIjBI,GAAoBJ,EAAAA,EAAAA,IAAO,IAAPA,CAAH,4CAGjBK,GAAuBL,EAAAA,EAAAA,IAAO,KAAPA,CAAH,4CAGpBM,GAA2BN,EAAAA,EAAAA,IAAO,IAAPA,CAAH,4CAGxBO,GAAqBP,EAAAA,EAAAA,IAAO,KAAPA,CAAH,4CAGlBQ,GAAyBR,EAAAA,EAAAA,IAAO,IAAPA,CAAH,4C,SCrBtBS,EAAY,SAAC,GAAe,IAGnCC,EAHsBC,EAAY,EAAZA,MAClBC,EAAwDD,EAAxDC,SAAUC,EAA8CF,EAA9CE,MAAOC,EAAuCH,EAAvCG,aAAcC,EAAyBJ,EAAzBI,OAAQC,EAAiBL,EAAjBK,aAS/C,OALEN,EADEC,EAAMM,YACE,0CAAsCN,EAAMM,aAGpD,+FAGF,UAAClB,EAAD,YACE,SAACE,EAAD,CAAiBiB,IAAKR,EAAYS,IAAKN,KACvC,UAACX,EAAD,YACE,UAACC,EAAD,eACIU,EADJ,KACa,IAAIO,KAAKN,GAAcO,cADpC,QAGA,UAACjB,EAAD,0BACekB,KAAKC,MAAqB,GAAfP,GAD1B,QAGA,SAACX,EAAD,wBACA,SAACC,EAAD,UAA2BM,KAC3B,SAACL,EAAD,sBACA,SAACC,EAAD,UACGO,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,aAK/C,EC7BYC,EAAe,WAAO,IAAD,IAC1BC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOpB,EAAP,KAAcqB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAY,oBAAGR,EAASS,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAc7C,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEMC,EAAAA,EAAAA,IAAkBP,GAFxB,OAETQ,EAFS,OAGfX,EAASW,GAHM,gDAKfT,EAAS,EAAD,IALO,yDAAH,qDAQhBO,GACD,GAAE,CAACN,KAGF,iCACE,iCACE,UAAC,KAAD,WACG,KACD,SAAC,KAAD,CAAYS,GAAIP,EAAhB,mCAEDJ,IAAS,6CACTtB,IACC,iCACE,SAACF,EAAD,CAAWE,MAAOA,KAElB,UAAC,KAAD,YACE,SAAC,KAAD,sCAGA,SAAC,KAAD,CAASiC,GAAI,OAAQN,MAAOT,EAASS,MAArC,mBAGA,SAAC,KAAD,CAASM,GAAI,UAAWN,MAAOT,EAASS,MAAxC,+BAOR,SAAC,EAAAO,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/MovieDetailsCard/MovieDetailsCard.styled.jsx","components/MovieDetailsCard/MovieDetailsCard.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieDetailsCard = styled('div')`\n  display: flex;\n  padding: 20px;\n  gap: 50px;\n  justify-content: center;\n  background-color: black;\n`;\nexport const MovieDetailsImg = styled('img')`\n  display: block;\n`;\nexport const MovieDetailsAbout = styled('div')`\n  padding: 20px;\n  border: 2px solid black;\n  width: 600px;\n  background-color: white;\n`;\nexport const MovieDetailsTitle = styled('h2')`\n  text-align: center;\n  font-size: 35px;\n`;\nexport const MovieDetailsScore = styled('p')`\n  font-size: 25px;\n`;\nexport const MovieDetailsOverview = styled('h3')`\n  font-size: 25px;\n`;\nexport const MovieDetailsOverviewText = styled('p')`\n  font-size: 20px;\n`;\nexport const MovieDetailsGenres = styled('h3')`\n  font-size: 25px;\n`;\nexport const MovieDetailsGenresText = styled('p')`\n  font-size: 25px;\n`;","import {\n  MovieDetailsImg,\n  MovieDetailsAbout,\n  MovieDetailsTitle,\n  MovieDetailsScore,\n  MovieDetailsOverview,\n  MovieDetailsOverviewText,\n  MovieDetailsGenres,\n  MovieDetailsGenresText,\n  MovieDetailsCard,\n} from './MovieDetailsCard.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ movie }) => {\n  const { overview, title, release_date, genres, vote_average } = movie;\n\n  let posterPath;\n  if (movie.poster_path) {\n    posterPath = `https://image.tmdb.org/t/p/w400/${movie.poster_path}`;\n  } else {\n    posterPath =\n      'https://cdn.create.vista.com/api/media/small/324908572/stock-vector-3d-cinema-film-strip-in';\n  }\n  return (\n    <MovieDetailsCard>\n      <MovieDetailsImg src={posterPath} alt={title} />\n      <MovieDetailsAbout>\n        <MovieDetailsTitle>\n          \"{title}\"({new Date(release_date).getFullYear()})\n        </MovieDetailsTitle>\n        <MovieDetailsScore>\n          User Score: {Math.round(vote_average * 10)}%\n        </MovieDetailsScore>\n        <MovieDetailsOverview>Overview</MovieDetailsOverview>\n        <MovieDetailsOverviewText>{overview}</MovieDetailsOverviewText>\n        <MovieDetailsGenres>Genres</MovieDetailsGenres>\n        <MovieDetailsGenresText>\n          {genres.map(genre => genre.name).join(', ')}\n        </MovieDetailsGenresText>\n      </MovieDetailsAbout>\n    </MovieDetailsCard>\n  );\n};\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    name: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchMovieDetails } from 'api/fetchApi';\n\nimport {\n  MovieDetailsAdditional,\n  MovieDetailsAdditionalTitle,\n  NavItem,\n  LinkButton,\n  LinkBox,\n} from '../Pages.styled';\nimport { MovieCard } from 'components/MovieDetailsCard/MovieDetailsCard';\n\nexport const MovieDetails = () => {\n  const location = useLocation();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const result = await fetchMovieDetails(movieId);\n        setMovie(result);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      <>\n        <LinkBox>\n          {' '}\n          <LinkButton to={backLinkHref}>Back to all movies</LinkButton>\n        </LinkBox>\n        {error && <div>Something wrong</div>}\n        {movie && (\n          <>\n            <MovieCard movie={movie} />\n\n            <MovieDetailsAdditional>\n              <MovieDetailsAdditionalTitle>\n                Additional information\n              </MovieDetailsAdditionalTitle>\n              <NavItem to={'cast'} state={location.state}>\n                Cast\n              </NavItem>\n              <NavItem to={'reviews'} state={location.state}>\n                Reviews\n              </NavItem>\n            </MovieDetailsAdditional>\n          </>\n        )}\n      </>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};"],"names":["MovieDetailsCard","styled","MovieDetailsImg","MovieDetailsAbout","MovieDetailsTitle","MovieDetailsScore","MovieDetailsOverview","MovieDetailsOverviewText","MovieDetailsGenres","MovieDetailsGenresText","MovieCard","posterPath","movie","overview","title","release_date","genres","vote_average","poster_path","src","alt","Date","getFullYear","Math","round","map","genre","name","join","MovieDetails","location","useLocation","useState","setMovie","error","setError","movieId","useParams","backLinkHref","state","from","useEffect","fetchMovie","fetchMovieDetails","result","to","Suspense","fallback"],"sourceRoot":""}